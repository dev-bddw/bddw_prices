version: '3'

# Note related to the postgres data -- this yaml is designed to work on a copy of a production
# server (amazon ami)
# so copy of the ami of your production server, copy your .envs/.production to .envs/.staging then run this staging environment and and point your DNS
# to test.bddwsalestools.com and then run sudo docker-compose -f staging.yml up --build

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  staging_traefik: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/staging/django/Dockerfile
    image: bddw_prices_staging_django
    platform: linux/x86_64
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.staging/.django
      - ./.envs/.staging/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/staging/postgres/Dockerfile
    image: bddw_prices_staging_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.staging/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/staging/traefik/Dockerfile
    image: bddw_prices_staging_traefik
    depends_on:
      - django
    volumes:
      - staging_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    image: redis:6

  awscli:
    build:
      context: .
      dockerfile: ./compose/staging/aws/Dockerfile
    env_file:
      - ./.envs/.staging/.django
    volumes:
      - production_postgres_data_backups:/backups:z
